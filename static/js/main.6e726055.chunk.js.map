{"version":3,"sources":["components/Header/header.module.scss","images/header-bg.svg","components/Footer/footer.module.scss","images/footer-bg.svg","app.module.scss","components/StockList/stock-list.module.scss","components/Stock/stock.module.scss","components/User/user.module.scss","context/CurrencyContext.tsx","context/SectorContext.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","services/dataService.ts","components/User/UserProfile.tsx","components/CustomIntlProvider.tsx","icons/area.svg","icons/line.svg","icons/candle.svg","components/Stock/Stock.tsx","components/Navigation/Navigation.tsx","components/Navigation/NavigationRow.tsx","context/SymbolsContext.tsx","components/AddRemoveSymbol/AddRemoveSymbol.tsx","components/StockList/ChangeCell.tsx","components/StockList/NumberCell.tsx","components/StockList/ChartCell.tsx","components/StockList/CheckboxCell.tsx","components/StockList/PriceHeaderCell.tsx","components/StockList/AvgVolumeHeaderCell.tsx","components/StockList/PERatioHeaderCell.tsx","components/StockList/PriceCell.tsx","components/Stock/Symbol.tsx","components/StockList/StockList.tsx","components/SectorChange/SectorChange.tsx","pages/StockPage.tsx","components/HeatmapView.tsx","pages/HeatmapPage.tsx","pages/VirtualizedPage.tsx","App.tsx","serviceWorker.ts","index.tsx","components/AddRemoveSymbol/add.module.scss","images/user.jpg"],"names":["module","exports","CURRENCY","SECTOR","CurrencyContext","React","currency","USD","customValueRender","el","value","type","props","className","classNames","name","Header","onCurrencyChange","data","BGN","GBP","handleChange","event","call","undefined","target","styles","header","style","background","headerBg","popupSettings","animate","closeDuration","width","find","c","onChange","valueRender","textField","to","src","userImg","alt","Footer","footer","footerBg","SectorContext","sector","TECHNOLOGY","processData","Object","keys","intraday","reduce","acc","current","other","open","Number","parseFloat","close","high","low","volume","formatedDate","Date","getTime","change","color","Math","abs","date","timestamp","dataService","getSectorSymbol","a","HEALTHCARE","sectorMap","fetch","process","resp","json","symbols","getAllSymbols","health","tech","healthSymbols","techSymbols","concat","getOneDaySymbol","symbol","getSymbol","UserProfile","history","useHistory","setData","fetchData","newData","parsedData","map","item","proportion","random","handleBackClick","goBack","onClick","useImage","field","title","format","position","render","point","dataItem","toPrecision","rates","CustomFormatIntlService","locale","this","converted","IntlService","CustomIntlProvider","IntlProvider","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref","svgRef","height","viewBox","ref","ForwardRef","forwardRef","CHART_TYPES","DEFAULT_RANGE","start","end","DEFAULT_INTERVAL","unit","step","duration","MS_PER_DAY","customItemRender","selected","icon","customIntervalValueRender","ChartTypePicker","candleIcon","candle","lineIcon","line","areaIcon","area","itemRender","ChartIntervalPicker","interval","ChartRangePicker","setValue","calendarSettings","views","startDateInputSettings","label","endDateInputSettings","min","max","options","ChartPredefinedRange","setSelected","handleClick","getAttribute","last","o","href","data-name","data-duration","Stock","useParams","range","setRange","setInterval","setType","handleRangeChange","chartComp","onRangeChange","AreaChart","intl","useInternationalization","plotBands","result","index","categories","push","opacity","from","renderAs","zoomable","transitions","categoryAxis","axis","categoryField","markers","visible","border","tooltip","labels","content","formatNumber","baseUnit","baseUnitStep","maxDivisions","crosshair","LineChart","colorField","gap","e","getDate","formatDate","getHours","majorTicks","minorTicks","CandleChart","customAggregate","val","_values","_","dataItems","first","onSelectEnd","args","onZoomStart","preventDefault","downColorField","openField","closeField","lowField","highField","aggregate","mousewheel","highlight","Navigation","location","useLocation","handleStockClick","handleHeatmapClick","handleVirtualizedClick","togglable","pathname","includes","NavigationRow","children","SymbolsContext","AddRemoveSymbol","onSymbolsChange","onSymbolsRemove","filter","setFilter","allSymbols","setAllSymbols","handleRemoveClick","handleFilterChange","handleSymbolsAdd","newSymbols","some","s","iconClassName","backgroundColor","filterBy","logic","filters","operator","filterable","onFilterChange","iconClass","ChangeCell","oldValue","direction","transitionEnterDuration","transitionExitDuration","stackChildren","NumberCell","num","toFixed","replace","ChartCell","fetchDate","newDate","day_change","majorGridLines","axisCrossingValue","CheckboxCell","id","selectionChange","syntheticEvent","colSpan","checked","htmlFor","PriceHeaderCell","_props","AvgVolumeHeaderCell","PERatioHeaderCell","PriceCell","Symbol","document","querySelector","ReactDOM","price","StockList","onSelectedSymbolsChange","handleSelectionChange","newSelectData","handleRowClick","magicPrice","cngP","String","intv","window","didFound","old","price_open","change_pct","clearInterval","chartCell","selectedField","onSelectionChange","onRowClick","headerCell","cell","locked","ChangeSector","onSectorChange","StockPage","orientation","defaultPanes","size","minHeight","HeatmapView","prizeUpItemsCollection","newItem","parseInt","market_cap","prizeDownItemsCollection","prizeUpItems","prizeDownItems","TreeData","items","success","renderItem","JSON","stringify","text","$","kendoTreeMap","template","dataSource","kendo","HierarchicalDataSource","transport","read","schema","model","valueField","colors","marginBottom","HeatmapPage","load","likelySubtags","currencyData","weekData","numbers","currencies","caGregorian","dateFields","timeZoneNames","loadMessages","esMessages","orders","forEach","orderDate","shippedDate","DetailComponent","float","shipAddress","street","city","country","postalCode","details","GridDetailRow","VirtualizedPage","locales","language","dataStateChange","setState","dataResult","dataState","expandChange","isExpanded","expanded","aggregates","state","_pdfExport","exportExcel","_export","save","exportPDF","skip","take","sort","dir","group","currentLocale","exporter","sortable","groupable","reorderable","pageable","buttonCount","pageSizes","onDataStateChange","detail","expandField","onExpandChange","element","margin","bgNumbers","bgLocalCurrency","bgCaGregorian","bgDateFields","usNumbers","usLocalCurrency","usCaGregorian","usDateFields","gbNumbers","gbLocalCurrency","gbCaGregorian","gbDateFields","Main","locations","path","App","selectedSymbols","useRef","useState","setSymbols","setSector","setCurrency","handleCurrencyChange","useCallback","handleSectorChange","handleSymbolsChange","handleSelectedSymbolsChange","handleSymbolsRemove","x","Provider","main","Boolean","hostname","match","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e726055.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3fn4i\",\"currency-input\":\"header_currency-input__4YTKD\"};","module.exports = __webpack_public_path__ + \"static/media/header-bg.fb71804a.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__11BbJ\"};","module.exports = __webpack_public_path__ + \"static/media/footer-bg.a08c1749.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__1NOZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"symbol-cell\":\"stock-list_symbol-cell__3rX1S\",\"name-cell\":\"stock-list_name-cell__1RwOz\",\"price-cell\":\"stock-list_price-cell__3-qaw\",\"negative-cell\":\"stock-list_negative-cell__jU68E\",\"positive-cell\":\"stock-list_positive-cell__2N3P4\",\"multiline-header-cell\":\"stock-list_multiline-header-cell__1tLS4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"stock_list-item__3XKjs\",\"list-item-selected\":\"stock_list-item-selected__3nP9h\",\"ddl-list-item\":\"stock_ddl-list-item__3mZoX\",\"k-state-selected\":\"stock_k-state-selected__9tOE0\",\"stock\":\"stock_stock__37bOr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper-profile\":\"user_wrapper-profile__FhAZe\",\"close-icon\":\"user_close-icon__20FGF\",\"user-icon\":\"user_user-icon__DQf-N\",\"symbol-cell\":\"user_symbol-cell__36sZ3\",\"table-small\":\"user_table-small__2k6IV\",\"large\":\"user_large__1tmC5\",\"green\":\"user_green__1gNwp\",\"red\":\"user_red__2wbWF\"};","import * as React from 'react';\n\nexport enum CURRENCY {\n    USD,\n    BGN,\n    GBP\n}\n\nexport interface CurrencyContextType {\n    currency: CURRENCY,\n    onCurrencyChange?: any\n}\n\nexport const CurrencyContext = React.createContext<CurrencyContextType>({\n    currency: CURRENCY.USD\n});\n","import * as React from 'react';\n\nexport enum SECTOR {\n    HEALTHCARE,\n    TECHNOLOGY,\n}\n\nexport interface SectorContextType {\n    sector: SECTOR,\n    onSectorChange?: any\n}\n\nexport const SectorContext = React.createContext<SectorContextType>({\n    sector: SECTOR.TECHNOLOGY\n});\n","import * as React from 'react';\nimport styles from './header.module.scss';\nimport headerBg from '../../images/header-bg.svg';\nimport { DropDownList, DropDownListChangeEvent } from '@progress/kendo-react-dropdowns';\nimport { CURRENCY, CurrencyContext } from '../../context/CurrencyContext';\nimport { classNames } from '@progress/kendo-react-common';\nimport userImg from '../../images/user.jpg';\nimport { Link } from 'react-router-dom';\n\nconst customValueRender = (el: any, value: any) => (\n    <el.type\n        {...el.props}\n        className={classNames(el.props.className, \"text-left pl-0\")}\n    >\n        {value\n            ? (<>\n                <span className=\"text-left\">Currency in {value.name}</span></>)\n            : null}\n\n    </el.type>)\n\nexport const Header: React.FunctionComponent<any> = () => {\n    const { currency, onCurrencyChange } = React.useContext(CurrencyContext);\n    const data = [\n        { name: 'USD', value: CURRENCY.USD },\n        { name: 'BGN', value: CURRENCY.BGN },\n        { name: 'GBP', value: CURRENCY.GBP }\n    ];\n\n    const handleChange = React.useCallback(\n        (event: DropDownListChangeEvent) => {\n            if (onCurrencyChange) {\n                onCurrencyChange.call(undefined, event.target.value.value)\n            }\n        },\n        [onCurrencyChange]\n    )\n\n    return (\n        <header\n            className={classNames(styles.header, styles['currency-input'])}\n            style={{ background: `url(${headerBg})` }}\n        >\n            <div className=\"container pt-4 pb-2\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h1 className=\"mb-0 header-title\">Stock stockslist</h1>\n                        <DropDownList\n                            popupSettings={{\n                                animate: {\n                                    closeDuration: 0\n                                }\n                            }}\n                            data={data}\n                            style={{ width: 200 }}\n                            value={data.find(c => c.value === currency)}\n                            onChange={handleChange}\n                            valueRender={customValueRender}\n                            textField=\"name\"\n                        />\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"text-right\">\n                            <Link to=\"/profile\">\n                                <img src={userImg} alt=\"user\"/>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </header >\n    )\n}","import * as React from 'react';\nimport styles from './footer.module.scss';\nimport footerBg from '../../images/footer-bg.svg';\n\nexport const Footer = () => {\n    return (\n        <footer\n            className={styles.footer}\n            style={{ background: `url(${footerBg})` }}\n        >\n            <div className=\"container-fluid\">\n                <p className=\"text-center m-0\">\n                    Copyright © 2019 Progress Software Corporation and/or its subsidiaries or affiliates.\n                </p>\n            </div>\n        </footer>\n    )\n}","import { SECTOR } from \"../context/SectorContext\";\n\nconst processData = (data: any) => {\n    const result = Object.keys(data.intraday).reduce((acc: any[], current: string) => {\n        const other = data.intraday[current];\n        const open = Number.parseFloat(other.open);\n        const close = Number.parseFloat(other.close);\n        const high = Number.parseFloat(other.high);\n        const low = Number.parseFloat(other.low);\n        const volume = Number.parseFloat(other.volume);\n        const formatedDate = `/Date(${new Date(current).getTime()})/`;\n        const change = (((close - open) / close) * 1);\n        const color = change >= 0 ? '#58B854' : '#D9534F';\n\n        return [...acc, {\n            open,\n            close,\n            high,\n            low,\n            volume,\n            formatedDate,\n            change: Math.abs(change),\n            color,\n            date: new Date(current),\n            timestamp: new Date(current).getTime()\n        }]\n    }, [])\n\n    return result;\n}\n\nexport const dataService = {\n    getSectorSymbol: async (sector: SECTOR) => {\n        const sectorMap = {\n            [SECTOR.HEALTHCARE]: 'health-symbols',\n            [SECTOR.TECHNOLOGY]: 'tech-symbols',\n        }\n        const resp = await fetch(`${process.env.PUBLIC_URL}/data/${sectorMap[sector]}.json`);\n        const symbols = await resp.json();\n        return symbols.data;\n    },\n    getAllSymbols: async () => {\n        const health = await fetch(`${process.env.PUBLIC_URL}/data/health-symbols.json`);\n        const tech = await fetch(`${process.env.PUBLIC_URL}/data/tech-symbols.json`);\n\n        const healthSymbols = await health.json();\n        const techSymbols = await tech.json();\n\n        return healthSymbols.data.concat(techSymbols.data);\n    },\n    getOneDaySymbol: async (symbol: any) => {\n        const resp = await fetch(`${process.env.PUBLIC_URL}/data/symbols/${symbol}1D.json`);\n        const data = await resp.json();\n        return processData(data);\n    },\n    getSymbol: async (symbol: any) => {\n        const resp = await fetch(`${process.env.PUBLIC_URL}/data/symbols/${symbol}5M.json`);\n        const data = await resp.json();\n\n        return processData(data);\n    }\n}","import * as React from 'react';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { dataService } from '../../services';\r\nimport { Chart, ChartSeries, ChartSeriesItem, ChartTooltip, ChartLegend } from '@progress/kendo-react-charts';\r\nimport useImage from '../../images/user.jpg';\r\nimport styles from './user.module.scss';\r\nimport { classNames } from '@progress/kendo-react-common';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const UserProfile = () => {\r\n    const history = useHistory();\r\n    const [data, setData] = React.useState<any[]>([]);\r\n    const fetchData = React.useCallback(async () => {\r\n        const newData = await dataService.getAllSymbols();\r\n        const parsedData = newData.map((item: any) => {\r\n            item.proportion = Math.random() / 10;\r\n            return item;\r\n        })\r\n        setData(parsedData)\r\n    }, [])\r\n\r\n    const handleBackClick = React.useCallback(\r\n        () => {\r\n            history.goBack();\r\n        },\r\n        [history]\r\n    )\r\n    const tooltipRender = (props: any) => {\r\n        if (props.point) {\r\n            let symbol = props.point.dataItem.symbol\r\n            let proportion = props.point.dataItem.proportion * 100\r\n            return symbol + \" - \" + proportion.toPrecision(3);\r\n        }\r\n    }\r\n    React.useEffect(() => { fetchData() }, [fetchData]);\r\n\r\n    return (\r\n        <div className={classNames(styles['wrapper-profile'], 'wrapper-profile')}>\r\n            <div className=\"profile-header container\">\r\n                <div className=\"row mt-3 mb-2\">\r\n                    <div className=\"col-10\"><h1 className=\"my-auto\">My Portfolio</h1></div>\r\n                    <div className=\"col-2 text-right my-auto\">\r\n                        <a className={styles['close-icon']} onClick={handleBackClick}>\r\n                            <i className={classNames('k-icon k-i-close')} />\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container inner-wrapper\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-lg-3 text-center\">\r\n                        <div className=\"avatar\">\r\n                            <img className={styles['user-icon']} src={useImage} width=\"100\" alt=\"Collin Johnson\" />\r\n                        </div>\r\n                        <h3 className=\"mb-5\">Collin Johnson</h3>\r\n                        <table className={styles['table-small']}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>CURRENT VALUE:</td>\r\n                                    <td className={styles[\"large\"]}>$100</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>24H CHANGE:</td>\r\n                                    <td className={styles[\"green\"]}>$20</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>% CHANGE:</td>\r\n                                    <td className={styles[\"green\"]}>+1.2</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>TOTAL COST:</td>\r\n                                    <td>$9,185</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>TOTAL PROFIT:</td>\r\n                                    <td className={styles[\"red\"]}>$-2,638</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-5\">\r\n                        <Grid data={data}>\r\n                            <GridColumn field='symbol' title=\"Symbol\" className={styles['symbol-cell']} />\r\n                            <GridColumn field='name' title=\"Name\" width={200} />\r\n                            <GridColumn field=\"proportion\" title='Proportion' format={\"{0:p2}\"} />\r\n                        </Grid>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-4\">\r\n                        <Chart>\r\n                            <ChartLegend position='bottom' />\r\n                            <ChartTooltip render={tooltipRender} />\r\n                            <ChartSeries>\r\n                                <ChartSeriesItem data={data} field='proportion' type='pie' />\r\n                            </ChartSeries>\r\n                        </Chart>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { IntlProvider, IntlService } from '@progress/kendo-react-intl';\n\nconst rates: any = {\n    'en-US': 1,\n    'en-GB': 0.77,\n    'bg-BG': 1.75\n}\n\nclass CustomFormatIntlService extends IntlService {\n    formatNumber(value: number, format: string) {\n        if (format === 'c' || format === 'c2') {\n            const locale = this.locale;\n            const rate = rates[locale];\n            const converted = value * rate;\n\n            return `${super.formatNumber(converted, format)}`;\n        } else {\n            return `${super.formatNumber(value, format)}`\n        }\n    }\n}\n\n\nexport class CustomIntlProvider extends IntlProvider {\n    getIntlService() {\n        return new CustomFormatIntlService(this.props.locale);\n    }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M53.85,27.68l-13.05-9L28.74,33.72l-12.92-7L3,39.59V60H67V13.44ZM16.18,29.23l13.08,7L41.2,21.35l12.95,9L65,18.56v6L53.81,34.81l-13.06-6-12,13L15.91,36.89,5,43.26V40.41ZM53.73,41l-13-1L28.81,48.89l-12.9-4L5,50.38V45.57l11.09-6.47,13.19,5.07,12-13,12.94,6L65,27.27v6.19Z\"\n});\n\nvar SvgArea = function SvgArea(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 72 72\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgArea, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/area.2e780390.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"st0\",\n  d: \"M36,35.3l-12,12l-24-24v8.5l24,24l12-12l18,18l18-18v-8.5l-18,18L36,35.3z M51,32.3l-15-15L19.2,34.1l4.2,4.2     L36,25.8l15,15l21-21v-8.5L51,32.3z M0,53.3v8.5l10.8-10.8l-4.2-4.2L0,53.3z\"\n});\n\nvar SvgLine = function SvgLine(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 72 72\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgLine, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/line.1ce98a43.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  className: \"cls-1\",\n  d: \"M26,28H24V11h2Zm2,1H22v8h6Zm-2,9H24V49h2ZM36,20H34v5h2Zm2,6H32V39h6ZM36,40H34V55h2ZM6,21H4v9H6ZM8,31H2V46H8ZM6,47H4v6H6ZM16,17H14v9h2Zm2,10H12V41h6ZM16,42H14V58h2ZM66,11H64V27h2Zm2,17H62V39h6ZM66,40H64v6h2ZM46,14H44V29h2Zm2,16H42V43h6ZM46,44H44v4h2ZM56,18H54v7h2Zm2,8H52V49h6ZM56,50H54V60h2Z\"\n});\n\nvar SvgCandle = function SvgCandle(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 72 72\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgCandle, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/candle.f5c64e3c.svg\";\nexport { ForwardRef as ReactComponent };","import * as React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { DateRangePicker, MultiViewCalendarProps, MultiViewCalendar } from '@progress/kendo-react-dateinputs';\nimport { MS_PER_DAY } from '@progress/kendo-date-math';\nimport { classNames } from '@progress/kendo-react-common';\nimport { DropDownList, ListItemProps } from '@progress/kendo-react-dropdowns';\n\nimport { ReactComponent as areaIcon } from '../../icons/area.svg';\nimport { ReactComponent as lineIcon } from '../../icons/line.svg';\nimport { ReactComponent as candleIcon } from '../../icons/candle.svg';\nimport {\n    StockChart,\n    ChartSeries,\n    ChartSeriesItem,\n    ChartNavigator,\n    ChartNavigatorSelect,\n    ChartNavigatorSeries,\n    ChartNavigatorSeriesItem,\n    Chart,\n    ChartCategoryAxis,\n    ChartCategoryAxisItem,\n    ChartValueAxis,\n    ChartValueAxisItem,\n    ChartNavigatorCategoryAxis,\n} from '@progress/kendo-react-charts';\n\nimport 'hammerjs';\nimport styles from './stock.module.scss';\nimport { dataService } from '../../services';\nimport { useInternationalization } from '@progress/kendo-react-intl';\n\nconst DEFAULT_RANGE = {\n    start: new Date(2019, 9, 20),\n    end: new Date(2019, 9, 23)\n}\n\nconst DEFAULT_INTERVAL = {\n    unit: \"hours\",\n    step: 1,\n    duration: MS_PER_DAY / 24\n}\n\nenum CHART_TYPES {\n    candle,\n    line,\n    area\n}\n\nconst customItemRender = (el: React.ReactElement<HTMLLIElement>, props: ListItemProps) => (\n    <el.type\n        {...el.props}\n        className={classNames(\n            \"pl-2\",\n            el.props.className,\n            styles['ddl-list-item'],\n            {\n                [styles['k-state-selected']]: props.selected\n            })}\n    >\n        <props.dataItem.icon />\n        &nbsp;\n        <span className=\"ml-3\">{props.dataItem.name}</span>\n    </el.type>)\n\nconst customValueRender = (el: any, value: any) => (\n    <el.type\n        {...el.props}\n        className={classNames(\n            \"pl-2\",\n            el.props.className,\n            styles['ddl-list-item'])}\n    >\n        {value\n            ? (<><value.icon />\n                &nbsp;\n                <span className=\"ml-3\">{value.name}</span></>)\n            : null}\n\n    </el.type>)\n\nconst customIntervalValueRender = (el: any, value: any) => (\n    <el.type\n        {...el.props}\n        className={classNames(\n            \"pl-2\",\n            el.props.className,\n            styles['ddl-list-item'])}\n    >\n        {value\n            ? (<span className=\"ml-3\">Interval {value.name}</span>)\n            : null}\n\n    </el.type >)\n\nconst ChartTypePicker = (props: any) => {\n    const data = React.useMemo(() => [\n        { name: 'Candle', icon: candleIcon, type: CHART_TYPES.candle },\n        { name: 'Line', icon: lineIcon, type: CHART_TYPES.line },\n        { name: 'Area', icon: areaIcon, type: CHART_TYPES.area }\n    ], []);\n\n    const handleChange = React.useCallback(\n        (event) => {\n            if (props.onChange) {\n                props.onChange.call(undefined, { value: event.target.value.type })\n            }\n        },\n        [props.onChange]\n    )\n\n    return (\n        <DropDownList\n            data={data}\n            style={{ width: 130 }}\n            value={data.find(i => i.type === props.value)}\n            onChange={handleChange}\n            textField={'name'}\n            itemRender={customItemRender}\n            valueRender={customValueRender}\n        />\n    )\n}\n\nconst ChartIntervalPicker = (props: any) => {\n    const data = React.useMemo(() => [\n        { name: '5M', interval: { unit: 'minutes', step: 5, duration: MS_PER_DAY / 24 / 12 } },\n        { name: '15M', interval: { unit: 'minutes', step: 15, duration: MS_PER_DAY / 96 } },\n        { name: '30M', interval: { unit: 'minutes', step: 30, duration: MS_PER_DAY / 48 } },\n        { name: '1H', interval: { unit: 'hours', step: 1, duration: MS_PER_DAY / 24 } },\n        { name: '4H', interval: { unit: 'hours', step: 4, duration: MS_PER_DAY / 6 } },\n        { name: '1D', interval: { unit: 'days', step: 1, duration: MS_PER_DAY } },\n        { name: '1W', interval: { unit: 'weeks', step: 1, duration: MS_PER_DAY * 7 } },\n    ], []);\n\n    const handleChange = React.useCallback(\n        (event) => {\n            if (props.onChange) {\n                props.onChange.call(undefined, { value: event.target.value.interval })\n            }\n        },\n        [props.onChange]\n    )\n\n    return (\n        <DropDownList\n            data={data}\n            style={{ width: 150 }}\n            value={data.find(i => i.interval.unit === props.value.unit && i.interval.step === props.value.step)}\n            onChange={handleChange}\n            textField={'name'}\n            valueRender={customIntervalValueRender}\n        />\n    )\n}\n\nconst ChartRangePicker = (props: any) => {\n    const [value, setValue] = React.useState(props.value);\n\n    const handleChange = React.useCallback(\n        (event) => {\n            setValue(event.value);\n            if (event.value.start && event.value.end) {\n                props.onChange.call(undefined, event);\n            }\n        },\n        [setValue, props.onChange]\n    )\n\n    const sync = () => {\n        setValue(props.value);\n    }\n\n    React.useEffect(sync, [props.value]);\n\n    return (\n        <DateRangePicker\n            calendarSettings={{ views: 1 }}\n            value={value}\n            onChange={handleChange}\n            startDateInputSettings={{ label: '', width: 130 }}\n            endDateInputSettings={{ label: '', width: 130 }}\n            min={new Date(\"2019-10-1 00:00:00\")}\n            max={new Date(\"2019-11-1 00:00:00\")}\n        />\n    )\n}\n\nconst options = [\n    { name: '1H', duration: MS_PER_DAY / 24 },\n    { name: '4H', duration: MS_PER_DAY / 6 },\n    { name: '12H', duration: MS_PER_DAY / 2 },\n    { name: '1D', duration: MS_PER_DAY },\n    { name: '4D', duration: MS_PER_DAY * 4 },\n    { name: '1W', duration: MS_PER_DAY * 7 },\n]\nconst ChartPredefinedRange = (props: any) => {\n    const [selected, setSelected] = React.useState<string | null>(null);\n\n    const handleClick = React.useCallback(\n        (event: React.SyntheticEvent<HTMLAnchorElement>) => {\n            const name = (event.target as HTMLElement).getAttribute(\"data-name\");\n            setSelected(name);\n            if (!props.last) { return; }\n            const end = props.last;\n            const start = new Date(end.getTime() - Number((event.target as HTMLElement).getAttribute(\"data-duration\")));\n            const value = {\n                start,\n                end\n            }\n            if (props.onChange) {\n                props.onChange.call(undefined, { value })\n            }\n        }, [props.last, props.onChange])\n\n    const clear = () => {\n        const current = options.find(o => o.name === selected);\n        if (current && props.value.start && props.last.getTime() - current.duration !== props.value.start.getTime()) {\n            setSelected(null);\n        }\n    }\n\n    React.useEffect(clear, [props.value, props.last, selected]);\n    return (\n        <div className={classNames(\"d-inline-block\", styles['end-date-input'])}>\n            <ul className=\"k-reset d-flex\">\n                {options.map((item) =>\n                    <li className=\"ml-3\" key={item.name} >\n                        <a\n                            href=\"#\"\n                            onClick={handleClick}\n                            data-name={item.name}\n                            data-duration={item.duration}\n                            className={classNames(\n                                'list-item',\n                                styles['list-item'],\n                                { [styles['list-item-selected']]: item.name === selected },\n                            )}\n                        >\n                            {item.name}\n                        </a>\n                    </li>\n                )}\n            </ul>\n        </div>)\n}\n\nexport const Stock = () => {\n    const { symbol } = useParams();\n    const [data, setData] = React.useState<any>([]);\n    const [range, setRange] = React.useState(DEFAULT_RANGE);\n    const [interval, setInterval] = React.useState(DEFAULT_INTERVAL);\n    const [type, setType] = React.useState<CHART_TYPES>(CHART_TYPES.candle);\n\n    const handleRangeChange = React.useMemo(\n        () => (event: any) => {\n            setRange(event.value);\n        },\n        [])\n\n    const handleTypeChange = (event: any) => {\n        setType(event.value);\n    }\n\n    const handleIntervalChange = (event: any) => {\n        setInterval(event.value);\n    }\n\n    const fetchData = React.useCallback(async () => {\n        const newData = await dataService.getSymbol(symbol || 'SNAP');\n        setData(newData)\n    }, [symbol])\n\n    React.useEffect(() => { fetchData() }, [fetchData]);\n\n    const chartComp: React.ReactNode = React.useMemo(() => {\n        switch (type) {\n            case CHART_TYPES.candle:\n                return <CandleChart data={data} interval={interval} range={range} onRangeChange={handleRangeChange} />;\n            case CHART_TYPES.line:\n                return <LineChart data={data} interval={interval} range={range} />;\n            case CHART_TYPES.area:\n                return <AreaChart data={data} interval={interval} range={range} />;\n            default:\n                return <LineChart data={data} interval={interval} range={range} />;\n        }\n    }, [type, interval, data, range, handleRangeChange]);\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-12 col-lg-4 mb-3 mt-lg-0 text-center text-lg-left\">\n                    <ChartRangePicker\n                        value={range}\n                        onChange={handleRangeChange}\n                    />\n                </div>\n                <div className=\"col-12 col-lg-4 mb-3 text-center m-lg-auto\">\n                    <ChartPredefinedRange\n                        value={range}\n                        onChange={handleRangeChange}\n                        last={(data && data.length) ? new Date(data[data.length - 1].timestamp) : null}\n                    />\n                </div>\n                <div className=\"col-12 col-lg-4 text-center text-lg-right\">\n                    <ChartIntervalPicker\n                        value={interval}\n                        onChange={handleIntervalChange}\n                    />\n                    <ChartTypePicker\n                        value={type}\n                        onChange={handleTypeChange}\n                    />\n                </div>\n            </div>\n            <div className=\"row mt-3\">\n                <div className=\"col\" >\n                    {chartComp}\n                </div>\n            </div>\n        </>\n    )\n}\n\nconst AreaChart = (props: any) => {\n    const intl = useInternationalization();\n    const plotBands = React.useMemo(\n        () => {\n            let result = [];\n            let index = 0;\n            if (!props.range.start || !props.range.end) { return; }\n            const diff = (props.range.end.getTime() - props.range.start.getTime())\n            const categories = diff / props.interval.duration;\n            const step = categories / 12 < 1 ? 1 : categories / 12;\n\n            for (let i = 0; i < categories; i += step) {\n                if (index++ % 2 === 0) {\n                    result.push({\n                        color: '#000',\n                        opacity: 0.03,\n                        from: i,\n                        to: i + step\n                    })\n                }\n            }\n\n            return result;\n        }, [props.range, props.interval.duration]);\n\n    return (<Chart\n        renderAs=\"canvas\"\n        zoomable={false}\n        transitions={false}>\n        <ChartSeries>\n            <ChartSeriesItem\n                data={props.data}\n                type=\"area\"\n                field=\"close\"\n                color=\"#007BFF\"\n                // eslint-disable-next-line\n                style={\"smooth\"}\n                categoryAxis=\"close\"\n                axis=\"valueCloseAxis\"\n                categoryField=\"date\"\n                markers={{ visible: false, border: { color: \"#007BFF\" } }}\n                tooltip={{ background: \"#007BFF\", visible: true, format: \"{0:c}\" }}\n            />\n        </ChartSeries>\n        <ChartValueAxis>\n            <ChartValueAxisItem\n                name=\"valueCloseAxis\"\n                labels={{ content: ({ value }) => intl.formatNumber(value, 'c') }}\n            />\n        </ChartValueAxis>\n        <ChartCategoryAxis>\n            <ChartCategoryAxisItem\n                type=\"date\"\n                name=\"close\"\n                plotBands={plotBands}\n                baseUnit={props.interval.unit}\n                baseUnitStep={props.interval.step}\n                maxDivisions={20}\n                min={props.range.start}\n                max={props.range.end}\n                crosshair={{\n                    visible: true,\n                    tooltip: { visible: true, }\n                }}\n            />\n        </ChartCategoryAxis>\n    </Chart>)\n}\n\nconst LineChart = (props: any) => {\n    const intl = useInternationalization();\n\n    const plotBands = React.useMemo(\n        () => {\n            let result = [];\n            let index = 0;\n            if (!props.range.start || !props.range.end) { return; }\n            const diff = (props.range.end.getTime() - props.range.start.getTime())\n            const categories = diff / props.interval.duration;\n            const step = categories / 12 < 1 ? 1 : categories / 12;\n\n            for (let i = 0; i < categories; i += step) {\n                if (index++ % 2 === 0) {\n                    result.push({\n                        color: '#000',\n                        opacity: 0.03,\n                        from: i,\n                        to: i + step\n                    })\n                }\n            }\n\n            return result;\n        }, [props.range, props.interval.duration]);\n\n    return (<Chart\n        renderAs=\"canvas\"\n        zoomable={false}\n        transitions={false}\n    >\n        <ChartSeries>\n            <ChartSeriesItem\n                data={props.data}\n                type=\"line\"\n                field=\"close\"\n                color=\"#007BFF\"\n                style=\"smooth\"\n                categoryAxis=\"close\"\n                axis=\"valueCloseAxis\"\n                categoryField=\"date\"\n                markers={{ visible: true, border: { color: '#007BFF' } }}\n                tooltip={{ background: \"#007BFF\", visible: true, format: \"{0:c}\" }}\n            />\n            <ChartSeriesItem\n                data={props.data}\n                type=\"column\"\n                field={\"change\"}\n                axis={\"valueChangeAxis\"}\n                categoryAxis=\"change\"\n                colorField=\"color\"\n                border={{ color: 'transparent' }}\n                categoryField=\"date\"\n                gap={0.75}\n                tooltip={{ format: \"{0:p2}\" }}\n            />\n        </ChartSeries>\n        <ChartValueAxis>\n            <ChartValueAxisItem\n                name=\"valueCloseAxis\"\n                labels={{ content: ({ value }) => intl.formatNumber(value, 'c') }}\n            />\n            <ChartValueAxisItem\n                name=\"valueChangeAxis\"\n                min={0}\n                max={0.4}\n                visible={false}\n            />\n        </ChartValueAxis>\n        <ChartCategoryAxis>\n            <ChartCategoryAxisItem\n                type=\"date\"\n                baseUnit={props.interval.unit}\n                baseUnitStep={props.interval.step * 4}\n                name=\"close\"\n                labels={{\n                    content: (e) => e.value.getDate() === 1\n                        ? intl.formatDate(e.value, \"MMM\")\n                        : e.value.getHours() === 0\n                            ? e.value.getDate()\n                            : ''\n                }}\n                min={props.range.start}\n                max={props.range.end}\n            />\n            <ChartCategoryAxisItem\n                type=\"date\"\n                name=\"change\"\n                line={{ visible: false }}\n                crosshair={{ visible: true, tooltip: { visible: true, format: '{0:t}' } }}\n                majorTicks={{ visible: false }}\n                minorTicks={{ visible: false }}\n                plotBands={plotBands}\n                baseUnit={props.interval.unit}\n                baseUnitStep={props.interval.step}\n                min={props.range.start}\n                max={props.range.end}\n                labels={{ visible: false }}\n            />\n        </ChartCategoryAxis>\n    </Chart>)\n}\n\nconst CandleChart = (props: any) => {\n    const intl = useInternationalization();\n\n    const handleSelectEnd = (args: any) => {\n        props.onRangeChange.call(undefined, {\n            value: {\n                start: args.from,\n                end: args.to\n            }\n        });\n    }\n\n    const customAggregate = React.useMemo(\n        () => ({\n            open: (val: any[]) => val[0],\n            close: (val: any[]) => val[val.length - 1],\n            high: (val: any[]) => Math.max(...val),\n            low: (val: any[]) => Math.min(...val),\n            volume: (val: any[]) => val[0]\n        }),\n        [])\n\n    const customChangeAggregate = React.useCallback(\n        (_values, _, dataItems) => {\n            const first = dataItems[0];\n            const last = dataItems[dataItems.length - 1];\n            return Math.abs((last.close - first.open) / dataItems.length / 100);\n        },\n        []\n    )\n\n\n    const plotBands = React.useMemo(\n        () => {\n            let result = [];\n            let index = 0;\n            if (!props.range.start || !props.range.end) { return; }\n            const diff = (props.range.end.getTime() - props.range.start.getTime())\n            const categories = diff / props.interval.duration;\n            const step = categories / 12 < 1 ? 1 : categories / 12;\n\n            for (let i = 0; i < categories; i += step) {\n                if (index++ % 2 === 0) {\n                    result.push({\n                        color: '#000',\n                        opacity: 0.03,\n                        from: i,\n                        to: i + step\n                    })\n                }\n            }\n\n            return result;\n        }, [props.range, props.interval.duration]);\n\n    return (\n        <StockChart\n            renderAs=\"canvas\"\n            zoomable={false}\n            transitions={false}\n            onSelectEnd={handleSelectEnd}\n            onZoomStart={(e) => e.preventDefault()}\n        >\n            <ChartSeries >\n                <ChartSeriesItem\n                    data={props.data}\n                    colorField=\"color\"\n                    downColorField=\"color\"\n                    type=\"candlestick\"\n                    openField=\"open\"\n                    closeField=\"close\"\n                    lowField=\"low\"\n                    highField=\"high\"\n                    categoryField=\"date\"\n                    aggregate={customAggregate}\n                    gap={0.75}\n                    border={{ color: 'transparent' }}\n                    tooltip={{\n                        format: `\n                        <table>\n                        <tbody>\n                        <tr><th>{4:t}</th><th>{4:d/M}</th></tr> \n                        <tr><td>Open:</td> <td>{0:c2}</td></tr>\n                        <tr><td>High:</td><td>{1:c2}</td></tr>\n                        <tr><td>Low:</td><td>{2:c2}</td></tr>\n                        <tr><td>Close:</td><td>{3:c2}</td></tr>\n                        </tbody>\n                        </table>\n                    `}}\n                />\n                <ChartSeriesItem\n                    data={props.data}\n                    type=\"column\"\n                    field={\"change\"}\n                    axis={\"valueChangeAxis\"}\n                    colorField=\"color\"\n                    border={{ color: 'transparent' }}\n                    categoryField=\"date\"\n                    gap={0.75}\n                    aggregate=\"avg\"\n                    tooltip={{ format: \"{0:p2}\" }}\n                />\n            </ChartSeries>\n            <ChartValueAxis>\n                <ChartValueAxisItem\n                    crosshair={{ visible: true }}\n                    labels={{ content: ({ value }) => intl.formatNumber(value, 'c') }}\n                />\n                <ChartValueAxisItem\n                    name=\"valueChangeAxis\"\n                    min={0}\n                    max={0.2}\n                    visible={false}\n                />\n            </ChartValueAxis>\n            <ChartCategoryAxis>\n                <ChartCategoryAxisItem\n                    crosshair={{ visible: true }}\n                    baseUnit={props.interval.unit}\n                    baseUnitStep={props.interval.step}\n                    plotBands={plotBands}\n                    labels={{ visible: false }}\n                />\n            </ChartCategoryAxis>\n            <ChartNavigator >\n                <ChartNavigatorSelect mousewheel={false} from={props.range.start} to={props.range.end} />\n                <ChartNavigatorSeries>\n                    <ChartNavigatorSeriesItem\n                        data={props.data}\n                        type=\"area\"\n                        field=\"close\"\n                        categoryField=\"date\"\n                        tooltip={{ visible: false }}\n                        highlight={{ visible: false }}\n                    />\n                </ChartNavigatorSeries>\n                <ChartNavigatorCategoryAxis\n                    baseUnit={\"days\"}\n                    labels={{ content: (e) => e.value.getDate() === 1 ? intl.formatDate(e.value, \"MMM\") : e.value.getDate() }}\n                />\n            </ChartNavigator>\n        </StockChart>)\n}","import * as React from 'react';\nimport { ButtonGroup, Button } from '@progress/kendo-react-buttons';\nimport { classNames } from '@progress/kendo-react-common';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nexport interface NavigationProps {\n    className?: string;\n}\n\nexport const Navigation: React.FunctionComponent<NavigationProps> = (props) => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const handleStockClick = React.useCallback(() => { history.push('/stocks'); }, [history]);\n    const handleHeatmapClick = React.useCallback(() => { history.push('/heatmap'); }, [history]);\n    const handleVirtualizedClick = React.useCallback(() => { history.push('/virtualized'); }, [history]);\n\n    return (\n        <div className={classNames(props.className)}>\n            <ButtonGroup>\n                <Button togglable={true} selected={location.pathname.includes('/stocks')} onClick={handleStockClick}>Stock List</Button>\n                <Button togglable={true} selected={location.pathname.includes('/heatmap')} onClick={handleHeatmapClick}>Heatmap View</Button>\n                <Button togglable={true} selected={location.pathname.includes('/virtualized')} onClick={handleVirtualizedClick}>Virtualized</Button>\n            </ButtonGroup>\n        </div>\n    )\n}","import * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\n\nexport interface NavigationRowProps {\n    children?: React.ReactNode;\n    className?: string;\n}\n\nexport const NavigationRow: React.FunctionComponent<NavigationRowProps> = (props) => {\n    return (\n        <div className={'navigation-container'}>\n            <div className={classNames(props.className)}>\n                {props.children}\n            </div>\n        </div>\n    )\n}","import * as React from 'react';\nimport { SECTOR } from './SectorContext';\n\nexport interface SymbolsContextType {\n    symbols: any,\n    onSymbolsChange?: any;\n    onSelectedSymbolsChange?: any;\n    onSymbolsRemove?: any;\n}\n\nexport const SymbolsContext = React.createContext<SymbolsContextType>({\n    symbols: {\n        [SECTOR.HEALTHCARE]: [],\n        [SECTOR.TECHNOLOGY]: []\n    }\n})","import * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { Button } from '@progress/kendo-react-buttons';\nimport { DropDownList, DropDownListFilterChangeEvent } from '@progress/kendo-react-dropdowns';\nimport { dataService } from '../../services';\nimport { SymbolsContext } from '../../context/SymbolsContext';\nimport { SectorContext } from '../../context/SectorContext';\nimport { filterBy } from \"@progress/kendo-data-query\";\nimport styles from './add.module.scss';\n\nexport interface AddRemoveSymbolProps {\n    className?: string;\n}\n\nconst customItemRender = (el: any, value: any) => (\n    <el.type\n        {...el.props}\n        className={classNames(styles[\"stock-item\"], \"container-fluid\")}\n    >\n        <div className=\"row justify-content-between\">\n            <div className=\"col-6\">\n                <span className={styles['stock-item-symbol']}>{value.dataItem.symbol}</span>\n                <span className={styles['stock-item-name']}>{value.dataItem.name}</span>\n            </div>\n            <div className=\"col-6 text-right m-auto\">\n                <span className={styles['stock-item-name']}>Equity - {value.dataItem[\"stock_exchange_short\"]}</span>\n            </div>\n        </div>\n    </el.type>)\n\nconst customValueRender = (el: any) => (\n    <el.type\n        {...el.props}\n        className={classNames(el.props.className, \"text-left pl-0\")}\n    >\n        Add new\n    </el.type>)\n\nexport const AddRemoveSymbol = (props: AddRemoveSymbolProps) => {\n    const { sector } = React.useContext(SectorContext);\n    const { symbols, onSymbolsChange, onSymbolsRemove } = React.useContext(SymbolsContext);\n    const [filter, setFilter] = React.useState<string>(\"\");\n    const [allSymbols, setAllSymbols] = React.useState([]);\n\n    const handleRemoveClick = React.useCallback(\n        () => {\n            if (onSymbolsRemove) {\n                onSymbolsRemove.call(undefined);\n            }\n        },\n        [onSymbolsRemove]\n    )\n\n    const fetchData = React.useCallback(\n        async () => {\n            const newData = await dataService.getSectorSymbol(sector);\n            setAllSymbols(newData);\n        },\n        [sector]\n    );\n\n    const handleFilterChange = React.useCallback(\n        (event: DropDownListFilterChangeEvent) => { setFilter(event.filter.value) },\n        [setFilter]\n    );\n\n    const handleSymbolsAdd = React.useCallback(\n        (event) => {\n            if (onSymbolsChange && event.target && event.target.value && event.target.value.symbol) {\n                const newSymbols = !symbols[sector].some((s: any) => s === event.target.value.symbol)\n                    ? symbols[sector].concat([event.target.value.symbol])\n                    : symbols[sector];\n\n                onSymbolsChange.call(undefined, newSymbols)\n            }\n        },\n        [onSymbolsChange, symbols, sector]\n    )\n\n    React.useEffect(() => { fetchData() }, [sector, fetchData]);\n\n    return (\n        <div className={classNames(props.className)}>\n            <DropDownList\n                iconClassName=\"k-icon k-i-add k-icon-before\"\n                style={{ backgroundColor: 'white', width: \"110px\" }}\n                className=\"dropdown-icon-before\"\n                value={null}\n                onChange={handleSymbolsAdd}\n                data={filterBy(allSymbols, {\n                    logic: 'or',\n                    filters: [\n                        { field: 'symbol', operator: \"contains\", value: filter },\n                        { field: \"name\", operator: 'contains', value: filter }\n                    ]\n                })}\n                filterable={true}\n                onFilterChange={handleFilterChange}\n                popupSettings={{\n                    className: \"popup-animation\",\n                    width: '300px'\n                }}\n                valueRender={customValueRender}\n                itemRender={customItemRender}\n            >\n                Add\n                </DropDownList>\n            &nbsp;\n            <Button iconClass='k-icon k-i-delete' onClick={handleRemoveClick}>Remove</Button>\n\n        </div>\n    )\n}","import * as React from 'react';\nimport { GridCellProps } from '@progress/kendo-react-grid';\nimport styles from './stock-list.module.scss';\nimport { useInternationalization } from '@progress/kendo-react-intl';\nimport { Push } from '@progress/kendo-react-animation';\n\nexport const ChangeCell = (props: GridCellProps) => {\n    const oldValue = React.useRef<string>();\n    const intl = useInternationalization();\n    const value = props.field && props.dataItem[props.field]\n\n\n    const direction = value >= 0\n        ? \"up\"\n        : \"down\"\n\n    React.useEffect(() => {\n        oldValue.current = value;\n    })\n\n    return (\n        <td className={value < 0 ? styles['negative-cell'] : styles['positive-cell']}>\n            <Push\n                transitionEnterDuration={500}\n                transitionExitDuration={0}\n                stackChildren={true}\n                direction={direction}\n            >\n                <React.Fragment key={value}>\n                    {props.field === 'change_pct'\n                        ? intl.formatNumber(value / 100, 'p2')\n                        : intl.formatNumber(value, 'c')}\n                </React.Fragment>\n            </Push>\n        </td>\n    )\n}","import * as React from 'react';\nimport { GridCellProps } from '@progress/kendo-react-grid';\n\nconst nFormatter = (num: number) => {\n    if (num >= 1000000000) {\n        return (num / 1000000000).toFixed(1).replace(/\\.0$/, '') + 'B';\n    }\n    if (num >= 1000000) {\n        return (num / 1000000).toFixed(1).replace(/\\.0$/, '') + 'M';\n    }\n    if (num >= 1000) {\n        return (num / 1000).toFixed(1).replace(/\\.0$/, '') + 'K';\n    }\n    return num;\n}\n\nexport const NumberCell = (props: GridCellProps) => {\n    const value = props.field && props.dataItem[props.field];\n    return (\n        <td>\n            {nFormatter(value)}\n        </td>\n    )\n}","import * as React from 'react';\nimport { Chart, ChartSeries, ChartSeriesItem, ChartValueAxis, ChartValueAxisItem, ChartCategoryAxis, ChartCategoryAxisItem } from '@progress/kendo-react-charts';\nimport { dataService } from '../../services';\nimport { GridCellProps } from '@progress/kendo-react-grid';\nimport styles from './stock-list.module.scss';\n\nexport const ChartCell = (props: GridCellProps) => {\n    const [data, setData] = React.useState<any>([]);\n    const fetchDate = React.useCallback(\n        async () => {\n            const newDate = await dataService.getOneDaySymbol(props.dataItem.symbol);\n            setData(newDate)\n        },\n        [props.dataItem.symbol]\n    )\n\n    React.useEffect(() => { fetchDate() }, [props.dataItem.symbol, fetchDate]);\n\n    const direction = props.dataItem.day_change >= 0\n        ? 'up'\n        : 'down'\n\n    const color = direction === 'down'\n        ? '#d9534f'\n        : '#5cb85c';\n\n    return (\n        <td className={styles['chart-cell']}>\n            <Chart renderAs=\"svg\" style={{ height: 50 }} transitions={false} zoomable={false}>\n                <ChartSeries>\n                    <ChartSeriesItem\n                        data={data}\n                        type='line'\n                        field=\"close\"\n                        markers={{ visible: false }}\n                        color={color}\n                        categoryField=\"date\"\n                    />\n                    <ChartSeriesItem\n                        data={data}\n                        type='area'\n                        field=\"close\"\n                        categoryField=\"date\"\n                        markers={{ visible: false }}\n                        color={color}\n                        opacity={0.2}\n                    />\n                </ChartSeries>\n                <ChartValueAxis>\n                    <ChartValueAxisItem\n                        visible={false}\n                        majorGridLines={{ visible: false }}\n                        axisCrossingValue={direction === 'up' ? null : 1000}\n                    />\n                </ChartValueAxis>\n                <ChartCategoryAxis>\n                    <ChartCategoryAxisItem\n                        type=\"date\"\n                        baseUnit=\"hours\"\n                        baseUnitStep={1}\n                        majorGridLines={{ visible: false }}\n                        visible={false}\n                    />\n                </ChartCategoryAxis>\n            </Chart>\n        </td>\n    );\n}","import * as React from 'react'\nimport { GridCellProps } from '@progress/kendo-react-grid'\nimport { classNames } from '@progress/kendo-react-common'\n\nexport const CheckboxCell = (props: GridCellProps) => {\n    const id = `checkbox-${props.dataItem.symbol}`;\n\n    const handleChange = React.useCallback(\n        (event: React.ChangeEvent<HTMLInputElement>) => {\n            if (props.selectionChange) {\n                props.selectionChange.call(undefined, {\n                    syntheticEvent: event,\n                })\n            }\n        }, [props.selectionChange])\n\n    return (\n        <td\n            style={props.style}\n            className={classNames(props.className, 'text-center')}\n            colSpan={props.colSpan}\n        >\n            <span>\n                <input onChange={handleChange} type=\"checkbox\" checked={props.dataItem.selected || false} id={id} className=\"k-checkbox\" />\n                <label className=\"k-checkbox-label\" htmlFor={id} />\n            </span>\n        </td>\n    )\n}","import * as React from 'react';\nimport { GridHeaderCellProps } from '@progress/kendo-react-grid';\nimport styles from './stock-list.module.scss';\nimport { classNames } from '@progress/kendo-react-common';\n\nexport const PriceHeaderCell = (_props: GridHeaderCellProps) => {\n    return (\n        <a className={classNames(styles[\"multiline-header-cell\"], \"k-link\")}>\n            Price\n            <small>\n                (Intraday)\n            </small>\n        </a>\n    )\n}","import * as React from 'react';\nimport { GridHeaderCellProps } from '@progress/kendo-react-grid';\nimport styles from './stock-list.module.scss';\nimport { classNames } from '@progress/kendo-react-common';\n\nexport const AvgVolumeHeaderCell = (_props: GridHeaderCellProps) => {\n    return (\n        <a className={classNames(styles[\"multiline-header-cell\"], \"k-link\")}>\n            Avg Vol\n            <small>\n                (3 months)\n            </small>\n        </a>\n    )\n}","import * as React from 'react';\nimport { GridHeaderCellProps } from '@progress/kendo-react-grid';\nimport styles from './stock-list.module.scss';\nimport { classNames } from '@progress/kendo-react-common';\n\nexport const PERatioHeaderCell = (_props: GridHeaderCellProps) => {\n    return (\n        <a className={classNames(styles[\"multiline-header-cell\"], \"k-link\")}>\n            PE Ratio\n            <small>\n                (TTM)\n            </small>\n        </a>\n    )\n}","import * as React from 'react';\nimport { GridCellProps } from '@progress/kendo-react-grid';\nimport { useInternationalization } from '@progress/kendo-react-intl';\nimport { Push } from '@progress/kendo-react-animation';\n\nexport const PriceCell = (props: GridCellProps) => {\n    const oldValue = React.useRef<string>();\n    const intl = useInternationalization();\n    const value = props.field && props.dataItem[props.field]\n\n\n    const direction = oldValue.current && Number(oldValue.current) < Number(value)\n        ? \"up\"\n        : \"down\"\n\n\n    React.useEffect(() => {\n        oldValue.current = value;\n    })\n\n    return (\n        <td>\n            <Push\n                transitionEnterDuration={500}\n                transitionExitDuration={0}\n                stackChildren={true}\n                direction={direction}\n            >\n                <React.Fragment key={value}>\n                    {intl.formatNumber(value, 'c')}\n                </React.Fragment>\n            </Push>\n        </td>\n    )\n}","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport styles from './stock.module.scss';\nimport { useInternationalization } from '@progress/kendo-react-intl';\n\nexport interface SymbolProps {\n    symbol?: string;\n    data?: any;\n}\n\nexport const Symbol = (props: SymbolProps) => {\n    const intl = useInternationalization();\n    const target = document && document.querySelector(\".k-splitbar\");\n\n    const direction = props.data && (Number(props.data[\"price_open\"]) < Number(props.data[\"price\"]))\n        ? 'up'\n        : 'down'\n\n    const color = direction === 'down'\n        ? '#d9534f'\n        : '#5cb85c';\n\n    return target && props.data\n        ? ReactDOM.createPortal(\n            <div className={styles['stock']} style={{ backgroundColor: color }}>\n                <span className={styles[\"stock-price\"]}>\n                    {`${props.symbol} ${intl.formatNumber(props.data.price, \"c\")}`}\n                </span>\n            </div>,\n            target\n        )\n        : null\n}\n\n","import * as React from 'react';\nimport { Grid, GridColumn, GridSelectionChangeEvent, GridRowClickEvent } from '@progress/kendo-react-grid';\nimport { dataService } from '../../services';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { ChangeCell } from './ChangeCell';\nimport { NumberCell } from './NumberCell';\nimport { ChartCell } from './ChartCell';\nimport { CheckboxCell } from './CheckboxCell';\nimport { PriceHeaderCell } from './PriceHeaderCell';\nimport { AvgVolumeHeaderCell } from './AvgVolumeHeaderCell';\nimport { PERatioHeaderCell } from './PERatioHeaderCell';\nimport { PriceCell } from './PriceCell';\nimport styles from './stock-list.module.scss';\nimport { SectorContext } from '../../context/SectorContext';\nimport { SymbolsContext } from '../../context/SymbolsContext';\nimport { Symbol } from '../Stock/Symbol';\n\n\nexport const StockList: React.FunctionComponent = () => {\n    const history = useHistory();\n    const { symbol } = useParams();\n    const { sector } = React.useContext(SectorContext);\n    const { symbols, onSelectedSymbolsChange } = React.useContext(SymbolsContext);\n    const [data, setData] = React.useState<any[]>([]);\n\n    const fetchData = React.useCallback(async () => {\n        const newData = await dataService.getSectorSymbol(sector);\n        setData(newData.filter((d: any) => symbols[sector].some((s: string) => s === d.symbol)))\n    }, [setData, sector, symbols])\n\n    const handleSelectionChange = React.useCallback(\n        (event: GridSelectionChangeEvent) => {\n            let newSelectData = data.map(item => {\n                if (item.symbol === event.dataItem.symbol) {\n                    item.selected = !event.dataItem.selected\n                }\n                return item\n            })\n\n            if (onSelectedSymbolsChange) {\n                onSelectedSymbolsChange.call(undefined, newSelectData.filter((i) => i.selected === true).map((i) => i.symbol))\n            }\n\n            setData(newSelectData);\n        }, [data, setData, onSelectedSymbolsChange])\n\n    const handleRowClick = React.useCallback(\n        (event: GridRowClickEvent) => {\n            let newSelectData = data.map(item => ({ ...item, selected: item.symbol === event.dataItem.symbol }))\n            setData(newSelectData);\n            history.push(`/stocks/${event.dataItem.symbol}`);\n        },\n        [data, setData, history])\n\n    const magicPrice = (price: string) => {\n        const rnd = (Math.random() + 0.01);\n        const volatility = 0.03;\n        let cngP = 2 * volatility * rnd;\n        if (cngP > volatility) {\n            cngP -= (2 * volatility);\n        }\n        const num = Number(price);\n        const change = num * cngP;\n        return String(num + change)\n    }\n\n    React.useEffect(() => { fetchData() }, [sector, symbols, fetchData]);\n    React.useEffect(() => {\n        const intv = window.setInterval(() => {\n            let didFound = false;\n            const newData = data.map((old) => {\n                const rnd = Math.random();\n                if (rnd > 0.10 || didFound) { return old; }\n\n                let item = {\n                    ...old,\n                    price_open: old.price,\n                    price: magicPrice(old.price)\n                }\n\n                item.day_change = String(Number(item.price) - Number(item.price_open));\n                item.change_pct = String(((Number(item.price) - Number(item.price_open)) / Number(item.price)) * 80);\n                didFound = true;\n                return item;\n            })\n\n            setData(newData);\n        }, 500)\n\n        return () => window.clearInterval(intv);\n    }, [sector, symbols, data]);\n\n    const chartCell = React.useMemo(\n        () => ChartCell,\n        []\n    )\n\n    return (\n        <>\n            <Symbol symbol={symbol} data={data.find((i: any) => i.symbol === symbol)} />\n            <Grid\n                data={data}\n                selectedField=\"selected\"\n                onSelectionChange={handleSelectionChange}\n                onRowClick={handleRowClick}\n            >\n                <GridColumn field=\"selected\" headerCell={_ => null} cell={CheckboxCell} width={40} />\n                <GridColumn field=\"symbol\" title=\"Symbol\" className={styles['symbol-cell']} width={70} locked={true}/>\n                <GridColumn field=\"name\" title=\"Name\" className={styles['name-cell']} width={200}/>\n                <GridColumn field=\"price\" title=\"Price\" className={styles['price-cell']} cell={PriceCell} headerCell={PriceHeaderCell} width={80} />\n                <GridColumn field=\"day_change\" title=\"Change\" cell={ChangeCell} width={80} />\n                <GridColumn field=\"change_pct\" title=\"% Change\" cell={ChangeCell} width={80} />\n                <GridColumn field=\"volume\" title=\"Volume\" cell={NumberCell} width={80} />\n                <GridColumn field=\"volume_avg\" title=\"Avg Vol\" cell={NumberCell} headerCell={AvgVolumeHeaderCell} width={90} />\n                <GridColumn field=\"market_cap\" title=\"Market Cap\" cell={NumberCell} width={102} />\n                <GridColumn field=\"pe\" title=\"PE Ratio (TTM)\" headerCell={PERatioHeaderCell} width={80} />\n                <GridColumn cell={chartCell} title='1 Day Chart' width={200} />\n            </Grid>\n        </>\n    )\n}","import * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\nimport { SECTOR, SectorContext } from '../../context/SectorContext';\n\nexport interface ChangeSectorProps {\n    className?: string;\n}\n\n\nconst customValueRender = (el: any, value: any) => (\n    <el.type\n        {...el.props}\n        className={classNames(el.props.className, \"text-left pl-0\")}\n    >\n        {value\n            ? (<>\n                <span className=\"text-left\">Sector: <strong>{value.name}</strong></span></>)\n            : null}\n\n    </el.type>)\n\nexport const ChangeSector = (props: ChangeSectorProps) => {\n    const { sector, onSectorChange } = React.useContext(SectorContext);\n\n    const data = React.useMemo(() => [\n        { name: 'Healthcare', sector: SECTOR.HEALTHCARE },\n        { name: \"Technology\", sector: SECTOR.TECHNOLOGY }\n    ], [])\n\n    const handleChange = React.useCallback(\n        (event) => {\n            if (onSectorChange) {\n                onSectorChange.call(undefined, event.target.value.sector)\n            }\n        },\n        [onSectorChange]\n    )\n\n    return (\n        <div className={classNames(props.className)}>\n            <DropDownList\n                textField=\"name\"\n                value={data.find(s => s.sector === sector)}\n                onChange={handleChange}\n                data={data}\n                popupSettings={{\n                    animate: { closeDuration: 0 }\n                }}\n                valueRender={customValueRender}\n            />\n        </div>\n    )\n}","import * as React from 'react';\nimport { Splitter } from '@progress/kendo-react-layout';\nimport {\n    Switch\n} from 'react-router-dom';\nimport { classNames } from '@progress/kendo-react-common';\n\nimport { Stock } from '../components/Stock/Stock';\nimport { NavigationRow, Navigation } from '../components/Navigation';\nimport { AddRemoveSymbol } from '../components/AddRemoveSymbol';\nimport { StockList } from '../components/StockList';\nimport { ChangeSector } from '../components/SectorChange';\n\nexport const StockPage = () => {\n    return (\n        <>\n            <Splitter\n                orientation={'vertical'}\n                defaultPanes={[\n                    { size: '520px', min: '200px' },\n                    {}\n                ]}\n            >\n                <div className={classNames(\"pt-4 pb-2\")} >\n                    <div className=\"container\">\n                        <Stock />\n                    </div>\n                </div>\n                <div className={classNames('py-3')} style={{ minHeight: 600 }}>\n                    <div className={\"container my-3\"}>\n                        <NavigationRow className=\"row justify-content-center\">\n                            <AddRemoveSymbol className=\"col-12 col-lg-4 mb-3 mb-lg-0 text-center text-lg-left\" />\n                            <Navigation className=\"col-12 col-lg-4 flex-grow-1 mb-3 mb-lg-0 text-center\" />\n                            <ChangeSector className=\"col-12 col-lg-4 text-right\" />\n                        </NavigationRow>\n                    </div>\n                    <div className=\"container\">\n                        <Switch >\n                            <StockList />\n                        </Switch>\n                    </div>\n                </div>\n            </Splitter>\n        </>\n    )\n}","import * as React from 'react';\nimport { dataService } from '../services';\nimport $ from 'jquery';\nimport '@progress/kendo-ui';\n\nexport const HeatmapView = () => {\n    const fetchData = React.useCallback(async () => {\n        const newData = await dataService.getAllSymbols();\n        const prizeUpItemsCollection = newData.map((item: any) => {\n            if (item.change_pct.indexOf('-') !== 0) {\n                let newItem = { value: 0, name: '', change: '' }\n                newItem.value = parseInt(item.market_cap);\n                newItem.name = item.symbol;\n                newItem.change = item.change_pct;\n                return newItem\n            }\n        })\n        const prizeDownItemsCollection = newData.map((item: any) => {\n            if (item.change_pct.indexOf('-') === 0) {\n                let newItem = { value: 0, name: '', change: '' }\n                newItem.value = parseInt(item.market_cap);\n                newItem.name = item.symbol;\n                newItem.change = item.change_pct;\n                return newItem\n            }\n        })\n        const prizeUpItems = prizeUpItemsCollection.filter((item: any) => item)\n        const prizeDownItems = prizeDownItemsCollection.filter((item: any) => item)\n        let TreeData = [\n            {\n                name: 'Market capitalization', value: 1, items: [\n                    { value: 1, name: \"Price up\", items: prizeUpItems },\n                    { value: 1, name: \"Price down\", items: prizeDownItems }\n                ]\n            }\n        ]\n        const setData = (options: any) => {\n            options.success(TreeData)\n        }\n\n        const renderItem = (props: any) => {\n            let title = JSON.stringify(props.dataItem)\n            return `<span title=${title}>${props.text}<br/>${props.dataItem.change}%</span>`;\n        }\n\n        $(\"#heatmap\").kendoTreeMap({\n            template: renderItem,\n            dataSource: new kendo.data.HierarchicalDataSource({\n                transport: {\n                    read: setData\n                },\n                schema: {\n                    model: {\n                        children: \"items\"\n                    }\n                }\n            }),\n            valueField: \"value\",\n            textField: \"name\",\n            colors: [[\"#00AD51\", \"#00EF81\"], [\"#FF0000\", \"#FF8F8F\"]]\n        })\n    }, []);\n\n    React.useEffect(() => { fetchData() }, [fetchData]);\n    return (\n        <div>\n            <div id='heatmap' style={{ height: 600, marginBottom: 50 }}></div>\n        </div>\n    )\n}","import * as React from 'react';\nimport { NavigationRow, Navigation } from '../components/Navigation';\nimport { HeatmapView } from '../components/HeatmapView';\n\nexport const HeatmapPage = () => {\n    return (\n        <>\n            <div className=\"container my-3\">\n                <NavigationRow className=\"row justify-content-center\">\n                    <Navigation className=\"col-24 flex-grow-1 text-center\" />\n                </NavigationRow>\n            </div>\n            <div className=\"container\">\n                <HeatmapView />\n            </div>\n        </>\n    )\n}","import * as React from 'react';\nimport { LocalizationProvider, IntlProvider, load, loadMessages } from '@progress/kendo-react-intl';\nimport { ExcelExport } from '@progress/kendo-react-excel-export';\nimport { GridPDFExport } from '@progress/kendo-react-pdf';\n\nimport likelySubtags from 'cldr-core/supplemental/likelySubtags.json';\nimport currencyData from 'cldr-core/supplemental/currencyData.json';\nimport weekData from 'cldr-core/supplemental/weekData.json';\n\nimport numbers from 'cldr-numbers-full/main/es/numbers.json';\nimport currencies from 'cldr-numbers-full/main/es/currencies.json';\nimport caGregorian from 'cldr-dates-full/main/es/ca-gregorian.json';\nimport dateFields from 'cldr-dates-full/main/es/dateFields.json';\n\nimport { process } from '@progress/kendo-data-query';\nimport orders from './data/orders.json';\nimport { GridDetailRow, Grid, GridToolbar, GridColumn } from '@progress/kendo-react-grid';\nimport { DropDownList } from '@progress/kendo-react-dropdowns';\n\nimport timeZoneNames from 'cldr-dates-full/main/es/timeZoneNames.json';\nimport esMessages from './data/es.json';\nimport { NavigationRow, Navigation } from '../components/Navigation/';\n\n\nload(\n    likelySubtags,\n    currencyData,\n    weekData,\n    numbers,\n    currencies,\n    caGregorian,\n    dateFields,\n    timeZoneNames\n);\n\n\nloadMessages(esMessages, 'es-ES');\n\n\norders.forEach((o: any) => {\n    o.orderDate = new Date(o.orderDate);\n    o.shippedDate = o.shippedDate === 'NULL' ? undefined : new Date(o.shippedDate);\n});\n\n\nclass DetailComponent extends GridDetailRow {\n    render() {\n        const dataItem = this.props.dataItem;\n        return (\n            <div>\n                <section style={{ width: \"200px\", float: \"left\" }}>\n                    <p><strong>Street:</strong> {dataItem.shipAddress.street}</p>\n                    <p><strong>City:</strong> {dataItem.shipAddress.city}</p>\n                    <p><strong>Country:</strong> {dataItem.shipAddress.country}</p>\n                    <p><strong>Postal Code:</strong> {dataItem.shipAddress.postalCode}</p>\n                </section>\n                <Grid style={{ width: \"500px\" }} data={dataItem.details}></Grid>\n            </div>\n        );\n    }\n}\n\nexport class VirtualizedPage extends React.Component<any, any> {\n    locales = [\n        {\n            language: 'en-US',\n            locale: 'en'\n        },\n        {\n            language: 'es-ES',\n            locale: 'es'\n        }\n    ]\n    constructor(props: any) {\n        super(props);\n        const dataState: any = {\n            skip: 0,\n            take: 20,\n            sort: [\n                { field: 'orderDate', dir: 'desc' }\n            ],\n            group: [\n                { field: 'customerID' }\n            ]\n        };\n        this.state = {\n            dataResult: process(orders, dataState),\n            dataState: dataState,\n            currentLocale: this.locales[0]\n        };\n    }\n\n    dataStateChange = (event: any) => {\n        this.setState({\n            dataResult: process(orders, event.data),\n            dataState: event.data\n        });\n    }\n\n    expandChange = (event: any) => {\n        const isExpanded =\n            event.dataItem.expanded === undefined ?\n                event.dataItem.aggregates : event.dataItem.expanded;\n        event.dataItem.expanded = !isExpanded;\n\n        this.setState({ ...this.state });\n    }\n\n    _pdfExport: any;\n    exportExcel = () => {\n        this._export.save();\n    }\n\n    _export: any;\n    exportPDF = () => {\n        this._pdfExport.save();\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"container my-3\">\n                    <NavigationRow className=\"row justify-content-center\">\n                        <Navigation className=\"col-12 flex-grow-1 text-center\" />\n                    </NavigationRow>\n                </div>\n                <div className=\"container\">\n                    <LocalizationProvider language={this.state.currentLocale.language}>\n                        <IntlProvider locale={this.state.currentLocale.locale} >\n                            <div>\n                                <ExcelExport\n                                    data={orders}\n                                    ref={(exporter) => { this._export = exporter; }}\n                                >\n                                    <Grid\n                                        style={{ height: '700px' }}\n                                        sortable\n                                        filterable\n                                        groupable\n                                        reorderable\n                                        pageable={{ buttonCount: 4, pageSizes: true }}\n\n                                        data={this.state.dataResult}\n                                        {...this.state.dataState}\n                                        onDataStateChange={this.dataStateChange}\n\n                                        detail={DetailComponent}\n                                        expandField=\"expanded\"\n                                        onExpandChange={this.expandChange}\n                                    >\n                                        <GridToolbar>\n                                            Locale:&nbsp;&nbsp;&nbsp;\n                                    <DropDownList\n                                                value={this.state.currentLocale}\n                                                textField=\"language\"\n                                                onChange={(e) => { this.setState({ currentLocale: e.target.value }); }}\n                                                data={this.locales} />&nbsp;&nbsp;&nbsp;\n                                    <button\n                                                title=\"Export to Excel\"\n                                                className=\"k-button k-primary\"\n                                                onClick={this.exportExcel}\n                                            >\n                                                Export to Excel\n                                    </button>&nbsp;\n                                    <button className=\"k-button k-primary\" onClick={this.exportPDF}>Export to PDF</button>\n                                        </GridToolbar>\n                                        <GridColumn field=\"customerID\" width=\"200px\" />\n                                        <GridColumn field=\"orderDate\" filter=\"date\" format=\"{0:D}\" width=\"300px\" />\n                                        <GridColumn field=\"shipName\" width=\"280px\" />\n                                        <GridColumn field=\"freight\" filter=\"numeric\" width=\"200px\" />\n                                        <GridColumn field=\"shippedDate\" filter=\"date\" format=\"{0:D}\" width=\"300px\" />\n                                        <GridColumn field=\"employeeID\" filter=\"numeric\" width=\"200px\" />\n                                        <GridColumn locked field=\"orderID\" filterable={false} title=\"ID\" width=\"90px\" />\n                                    </Grid>\n                                </ExcelExport>\n                                <GridPDFExport\n                                    ref={(element) => { this._pdfExport = element; }}\n                                    margin=\"1cm\" >\n                                    {<Grid data={process(orders, { skip: this.state.dataState.skip, take: this.state.dataState.take })} >\n                                        <GridColumn field=\"customerID\" width=\"200px\" />\n                                        <GridColumn field=\"orderDate\" filter=\"date\" format=\"{0:D}\" width=\"300px\" />\n                                        <GridColumn field=\"shipName\" width=\"280px\" />\n                                        <GridColumn field=\"freight\" filter=\"numeric\" width=\"200px\" />\n                                        <GridColumn field=\"shippedDate\" filter=\"date\" format=\"{0:D}\" width=\"300px\" />\n                                        <GridColumn field=\"employeeID\" filter=\"numeric\" width=\"200px\" />\n                                        <GridColumn locked field=\"orderID\" filterable={false} title=\"ID\" width=\"90px\" />\n                                    </Grid>}\n                                </GridPDFExport>\n                            </div>\n                        </IntlProvider>\n                    </LocalizationProvider>\n                </div>\n            </>\n        );\n    }\n}","import React from 'react';\nimport { Header } from './components/Header';\nimport { Footer } from './components/Footer';\nimport {\n  Route,\n  BrowserRouter,\n  Redirect,\n  HashRouter,\n  useLocation,\n} from 'react-router-dom';\n\nimport { UserProfile } from './components/User/UserProfile';\n\nimport styles from './app.module.scss';\nimport { CurrencyContext, CURRENCY } from './context/CurrencyContext';\nimport { SectorContext, SECTOR } from './context/SectorContext';\n\n/* CLDR Data */\n\nimport likelySubtags from 'cldr-core/supplemental/likelySubtags.json';\nimport currencyData from 'cldr-core/supplemental/currencyData.json';\nimport weekData from 'cldr-core/supplemental/weekData.json';\n\nimport bgNumbers from 'cldr-numbers-full/main/bg/numbers.json';\nimport bgLocalCurrency from 'cldr-numbers-full/main/bg/currencies.json';\nimport bgCaGregorian from 'cldr-dates-full/main/bg/ca-gregorian.json';\nimport bgDateFields from 'cldr-dates-full/main/bg/dateFields.json';\n\nimport usNumbers from 'cldr-numbers-full/main/en/numbers.json';\nimport usLocalCurrency from 'cldr-numbers-full/main/en/currencies.json';\nimport usCaGregorian from 'cldr-dates-full/main/en/ca-gregorian.json';\nimport usDateFields from 'cldr-dates-full/main/en/dateFields.json';\n\nimport gbNumbers from 'cldr-numbers-full/main/en-GB/numbers.json';\nimport gbLocalCurrency from 'cldr-numbers-full/main/en-GB/currencies.json';\nimport gbCaGregorian from 'cldr-dates-full/main/en-GB/ca-gregorian.json';\nimport gbDateFields from 'cldr-dates-full/main/en-GB/dateFields.json';\n\nimport { load } from '@progress/kendo-react-intl';\nimport { CustomIntlProvider } from './components/CustomIntlProvider';\nimport { StockPage } from './pages/StockPage';\nimport { HeatmapPage } from './pages/HeatmapPage';\nimport { VirtualizedPage } from './pages/VirtualizedPage';\nimport { SymbolsContext } from './context/SymbolsContext';\n\nload(\n  likelySubtags,\n  currencyData,\n  weekData,\n  bgNumbers,\n  bgLocalCurrency,\n  bgCaGregorian,\n  bgDateFields,\n  usNumbers,\n  usLocalCurrency,\n  usCaGregorian,\n  usDateFields,\n  gbNumbers,\n  gbLocalCurrency,\n  gbCaGregorian,\n  gbDateFields\n);\n\nconst Main = () => {\n  const locations = useLocation();\n  return (\n    <>\n      <Route path={\"/profile\"}>\n        <UserProfile />\n      </Route>\n      <Route path=\"/heatmap\">\n        <Header />\n        <HeatmapPage />\n      </Route>\n      <Route path=\"/virtualized\">\n        <Header />\n        <VirtualizedPage />\n      </Route>\n      <Route path={[\"/stocks/:symbol?\"]}  >\n        <Header />\n        <StockPage />\n      </Route>\n      {locations.pathname === '/' ? <Redirect to=\"/stocks\" /> : null}\n    </>\n  )\n}\n\nconst App: React.FunctionComponent<any> = () => {\n  const selectedSymbols = React.useRef<string[]>([]);\n  const [symbols, setSymbols] = React.useState<any>({\n    [SECTOR.HEALTHCARE]: ['SYK', \"GILD\", \"DHR\", \"CVS\", \"BMY\", \"TMO\", \"SNY\"],\n    [SECTOR.TECHNOLOGY]: ['TWTR', 'AAPL', \"MSFT\", \"SNAP\", \"NVDA\", \"CSCO\"]\n  })\n  const [sector, setSector] = React.useState<SECTOR>(SECTOR.TECHNOLOGY);\n  const [currency, setCurrency] = React.useState<CURRENCY>(CURRENCY.USD);\n\n  const locales = {\n    [CURRENCY.USD]: 'en-US',\n    [CURRENCY.BGN]: 'bg-BG',\n    [CURRENCY.GBP]: 'en-GB'\n  }\n\n  const handleCurrencyChange = React.useCallback(\n    (value: CURRENCY) => { setCurrency(value); },\n    [setCurrency]\n  )\n\n  const handleSectorChange = React.useCallback(\n    (value: SECTOR) => { setSector(value); },\n    [setSector]\n  )\n\n  const handleSymbolsChange = React.useCallback(\n    (value: string[]) => { setSymbols({ ...symbols, [sector]: value }); },\n    [setSymbols, sector, symbols]\n  )\n\n  const handleSelectedSymbolsChange = React.useCallback(\n    (value: [string]) => { selectedSymbols.current = value; },\n    [selectedSymbols]\n  )\n\n  const handleSymbolsRemove = React.useCallback(\n    () => {\n      const newSymbols = symbols[sector].filter((s: string) => !selectedSymbols.current.some((x) => x === s));\n      setSymbols({ ...symbols, [sector]: newSymbols })\n    },\n    [setSymbols, symbols, sector]\n  );\n\n  return (\n    <div className=\"App\">\n      <CustomIntlProvider locale={locales[currency]}>\n        <SymbolsContext.Provider value={{\n          symbols, onSymbolsChange: handleSymbolsChange,\n          onSelectedSymbolsChange: handleSelectedSymbolsChange,\n          onSymbolsRemove: handleSymbolsRemove\n        }}>\n          <SectorContext.Provider value={{ sector, onSectorChange: handleSectorChange }}>\n            <CurrencyContext.Provider value={{ currency, onCurrencyChange: handleCurrencyChange }}>\n              <HashRouter>\n                <main className={styles.main}>\n                  <Main />\n                </main>\n              </HashRouter>\n              <Footer />\n            </CurrencyContext.Provider>\n          </SectorContext.Provider>\n        </SymbolsContext.Provider>\n      </CustomIntlProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/main.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stock-item\":\"add_stock-item__1fXVH\",\"stock-item-symbol\":\"add_stock-item-symbol__BoLi2\",\"stock-item-name\":\"add_stock-item-name__1s7UM\"};","module.exports = __webpack_public_path__ + \"static/media/user.30f34c6e.jpg\";"],"sourceRoot":""}